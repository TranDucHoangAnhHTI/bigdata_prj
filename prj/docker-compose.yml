services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    # Đã bỏ healthcheck
    networks:
      - bigdata-net

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - bigdata-net

  hadoop-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-namenode
    restart: always
    ports:
      - "9870:9870"
      - "8020:8020"
    environment:
      CLUSTER_NAME: "demo-cluster"
    volumes:
      - namenode-data:/hadoop/dfs/name
    networks:
      - bigdata-net

  hadoop-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-datanode
    restart: always
    depends_on:
      - hadoop-namenode
    ports:
      - "9864:9864"
    environment:
      CORE_CONF_fs_defaultFS: "hdfs://hadoop-namenode:8020"
      CLUSTER_NAME: "demo-cluster"
    volumes:
      - datanode-data:/hadoop/dfs/data
    networks:
      - bigdata-net

  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    restart: always
    depends_on:
      - hadoop-namenode
      - hadoop-datanode
    environment:
      - SPARK_MODE=master
      - CORE_CONF_fs_defaultFS=hdfs://hadoop-namenode:8020
      - INIT_DAEMON_STEP=setup_spark
      - INIT_DAEMON_SEQUENCE=setup_hadoop
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - bigdata-net

  spark-worker:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker
    restart: always
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://hadoop-namenode:8020
      - INIT_DAEMON_STEP=setup_spark
      - INIT_DAEMON_SEQUENCE=setup_hadoop
    ports:
      - "8081:8081"
    networks:
      - bigdata-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - bigdata-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.0
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    ports:
      - "5601:5601"
    networks:
      - bigdata-net

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.2.1
    container_name: kafka-connect
    restart: always
    depends_on:
      - kafka
      - elasticsearch
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
    volumes:
      - ./connectors:/etc/kafka-connect/jars
    networks:
      - bigdata-net

networks:
  bigdata-net:
    driver: bridge

volumes:
  namenode-data:
  datanode-data:
